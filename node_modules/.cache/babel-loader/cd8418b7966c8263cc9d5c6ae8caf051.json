{"remainingRequest":"/Users/kscit/Documents/study/my-vue-example/node_modules/babel-loader/lib/index.js!/Users/kscit/Documents/study/my-vue-example/node_modules/eslint-loader/index.js??ref--13-0!/Users/kscit/Documents/study/my-vue-example/src/view/canvas/RectLayer.js","dependencies":[{"path":"/Users/kscit/Documents/study/my-vue-example/src/view/canvas/RectLayer.js","mtime":1586666413693},{"path":"/Users/kscit/Documents/study/my-vue-example/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/kscit/Documents/study/my-vue-example/node_modules/babel-loader/lib/index.js","mtime":499162500000},{"path":"/Users/kscit/Documents/study/my-vue-example/node_modules/eslint-loader/index.js","mtime":499162500000}],"contextDependencies":[],"result":["import _toConsumableArray from \"/Users/kscit/Documents/study/my-vue-example/node_modules/@babel/runtime-corejs2/helpers/esm/toConsumableArray\";\nimport \"core-js/modules/web.dom.iterable\";\nimport \"core-js/modules/es6.object.keys\";\nimport \"core-js/modules/es6.array.fill\";\nimport _slicedToArray from \"/Users/kscit/Documents/study/my-vue-example/node_modules/@babel/runtime-corejs2/helpers/esm/slicedToArray\";\nimport _classCallCheck from \"/Users/kscit/Documents/study/my-vue-example/node_modules/@babel/runtime-corejs2/helpers/esm/classCallCheck\";\nimport _createClass from \"/Users/kscit/Documents/study/my-vue-example/node_modules/@babel/runtime-corejs2/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/Users/kscit/Documents/study/my-vue-example/node_modules/@babel/runtime-corejs2/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/Users/kscit/Documents/study/my-vue-example/node_modules/@babel/runtime-corejs2/helpers/esm/getPrototypeOf\";\nimport _assertThisInitialized from \"/Users/kscit/Documents/study/my-vue-example/node_modules/@babel/runtime-corejs2/helpers/esm/assertThisInitialized\";\nimport _inherits from \"/Users/kscit/Documents/study/my-vue-example/node_modules/@babel/runtime-corejs2/helpers/esm/inherits\";\nimport _defineProperty from \"/Users/kscit/Documents/study/my-vue-example/node_modules/@babel/runtime-corejs2/helpers/esm/defineProperty\";\nimport BaseCanvas from \"./baseCanvas\";\n\nvar Rect =\n/*#__PURE__*/\nfunction (_BaseCanvas) {\n  _inherits(Rect, _BaseCanvas);\n\n  function Rect() {\n    var _this;\n\n    _classCallCheck(this, Rect);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(Rect).call(this));\n\n    _defineProperty(_assertThisInitialized(_this), \"_initOn\", function () {\n      _this._on('eidtEnd', _this.eidtEnd, _assertThisInitialized(_this));\n\n      _this._on('drawEnd', _this.drawEnd, _assertThisInitialized(_this));\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"eidtEnd\", function () {\n      _this.editPos = {};\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"drawEnd\", function (type, coordinates, coordinate) {\n      if (type == 'rect') {\n        _this.coordinates = _this.formateCoordinatesScale(coordinates);\n        _this.coordinate = _this.formateCoordinateScale(coordinate);\n\n        _this.clearFlag();\n\n        _this.drawRect();\n      }\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"clearFlag\", function () {\n      _this.editFlag = false;\n      _this.checkedIndex = -1;\n      _this.editPos = {};\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"_judgeNearLeastDot\", function (posList, pos) {\n      var pos0 = posList[0];\n      var pos1 = posList[1];\n      var x0 = pos0[0];\n      var x1 = pos1[0];\n      var y0 = pos0[1];\n      var y1 = pos1[1];\n      var x = pos[0];\n      var y = pos[1];\n\n      if (y <= y1 && y >= y0 || y <= y0 && y >= y1) {\n        if (Math.abs(x0 - x) <= _this.threshold) {\n          _this.editPos = {\n            index: 0,\n            value: 0\n          };\n          _this.editFlag = true;\n\n          _this.drawEditRect(_this.checkedIndex, [x0, pos[1]]);\n\n          return;\n        } else if (Math.abs(x1 - x) <= _this.threshold) {\n          _this.editPos = {\n            index: 1,\n            value: 0\n          };\n          _this.editFlag = true;\n\n          _this.drawEditRect(_this.checkedIndex, [x1, pos[1]]);\n\n          return;\n        }\n      }\n\n      if (x >= x0 && x <= x1 || x >= x1 && x <= x0) {\n        if (Math.abs(y0 - y) <= _this.threshold) {\n          _this.editPos = {\n            index: 0,\n            value: '1'\n          };\n          _this.editFlag = true;\n\n          _this.drawEditRect(_this.checkedIndex, [pos[0], y0]);\n\n          return;\n        } else if (Math.abs(y1 - y) <= _this.threshold) {\n          _this.editPos = {\n            index: 1,\n            value: '1'\n          };\n          _this.editFlag = true;\n\n          _this.drawEditRect(_this.checkedIndex, [pos[0], y1]);\n\n          return;\n        }\n      }\n\n      _this.editPos = {};\n\n      _this.drawEditRect(_this.checkedIndex);\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"_isPointInPath\", function (pos) {\n      var coordinates = _this.coordinates || [];\n\n      for (var i = coordinates.length - 1; i > -1; i--) {\n        var _ref = coordinates[i] && coordinates[i].paths,\n            _ref2 = _slicedToArray(_ref, 2),\n            pos1 = _ref2[0],\n            pos2 = _ref2[1];\n\n        _this._context.beginPath();\n\n        _this._context.rect(pos1[0], pos1[1], pos2[0] - pos1[0], pos2[1] - pos1[1]);\n\n        if (_this._context.isPointInPath(pos[0], pos[1])) {\n          return i;\n        }\n\n        if (_this._context.isPointInPath(pos[0] + _this.threshold, pos[1])) {\n          return i;\n        }\n\n        if (_this._context.isPointInPath(pos[0], pos[1] + _this.threshold)) {\n          return i;\n        }\n\n        if (_this._context.isPointInPath(pos[0] + _this.threshold, pos[1] + _this.threshold)) {\n          return i;\n        }\n\n        if (_this._context.isPointInPath(pos[0] - _this.threshold, pos[1])) {\n          return i;\n        }\n\n        if (_this._context.isPointInPath(pos[0] - _this.threshold, pos[1] - _this.threshold)) {\n          return i;\n        }\n\n        if (_this._context.isPointInPath(pos[0] + _this.threshold, pos[1] + _this.threshold)) {\n          return i;\n        }\n      }\n\n      return -1;\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"_drawRect\", function (x, y, width, height, fillFlag) {\n      _this._context.lineWidth = 1;\n\n      _this._context.beginPath();\n\n      _this._context.strokeStyle = _this.strokeColor;\n\n      _this._context.rect(x, y, width, height);\n\n      _this._context.stroke();\n\n      if (fillFlag) {\n        _this._context.fillStyle = _this.fillColor;\n\n        _this._context.fill();\n      }\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"drawRect\", function () {\n      _this.drawAlreadyRect();\n\n      var coordinate = _this.coordinate || [];\n\n      if (coordinate.length == 1) {\n        var pos = coordinate[0];\n\n        _this._drawRect(pos[0], pos[0], 0, 0);\n      } else if (coordinate.length == 2) {\n        var pos0 = coordinate[0] || {};\n        var pos1 = coordinate[1] || {};\n        var x0 = pos0[0];\n        var y0 = pos0[1];\n        var x1 = pos1[0];\n        var y1 = pos1[1];\n\n        _this._drawRect(x0, y0, x1 - x0, y1 - y0);\n      }\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"drawMoveRect\", function (pos) {\n      _this.drawAlreadyRect();\n\n      var coordinate = _this.coordinate || [];\n\n      if (coordinate.length == 1 && pos) {\n        var pos0 = coordinate[0] || [];\n        var x0 = pos0[0];\n        var y0 = pos0[1];\n        var x1 = pos[0];\n        var y1 = pos[1];\n\n        _this._drawRect(x0, y0, x1 - x0, y1 - y0);\n      }\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"mouseDown\", function (coordinates, coordinate, pos) {\n      _this.coordinates = _this.formateCoordinatesScale(coordinates);\n      _this.coordinate = _this.formateCoordinateScale(coordinate);\n\n      var checkedIndex = _this._isPointInPath(pos);\n\n      _this.checkedIndex = checkedIndex;\n\n      if (checkedIndex > -1) {\n        _this.editFlag = true;\n\n        if (_this.coordinate.length === 1) {\n          _this.preAddLoc = pos;\n\n          _this._emit('addLocToCoordinate', pos);\n\n          _this.eidtEnd();\n\n          _this.drawMoveRect(pos);\n        } else {\n          // 选中\n          _this._judgeNearLeastDot(_this.coordinates[checkedIndex].paths, pos); // this.drawMoveRect(pos);\n\n        }\n      } else {\n        if (_this.coordinate.length < 2) {\n          _this.preAddLoc = pos;\n\n          _this._emit('addLocToCoordinate', pos);\n\n          _this.eidtEnd();\n\n          _this.drawMoveRect(pos);\n        } else {\n          _this.drawRect();\n        }\n      }\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"mouseMove\", function (coordinates, coordinate, pos) {\n      _this.coordinates = _this.formateCoordinatesScale(coordinates);\n      _this.coordinate = _this.formateCoordinateScale(coordinate);\n\n      if (_this.coordinate.length == 1) {\n        _this.drawMoveRect(pos);\n\n        return;\n      }\n\n      if (_this.checkedIndex > -1) {\n        _this._judgeNearLeastDot(_this.coordinates[_this.checkedIndex].paths, pos); // this.drawMoveRect(pos);\n\n\n        return;\n      }\n\n      _this.drawMoveRect();\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"mouseMoveDrag\", function (coordinates, coordinate, pos) {\n      _this.coordinates = _this.formateCoordinatesScale(coordinates);\n      _this.coordinate = _this.formateCoordinateScale(coordinate);\n\n      if (_this.editFlag) {\n        if (_this.checkedIndex > -1 && Object.keys(_this.editPos).length > 0) {\n          var _this$editPos = _this.editPos,\n              index = _this$editPos.index,\n              value = _this$editPos.value;\n          var pathId = _this.coordinates[_this.checkedIndex] && _this.coordinates[_this.checkedIndex].pathId;\n          var checkedPaths = _this.coordinates[_this.checkedIndex] && _this.coordinates[_this.checkedIndex].paths || [];\n          var editPaths = checkedPaths[index];\n          var newPos = value == 0 ? [pos[value], editPaths[1]] : [editPaths[0], pos[1]];\n\n          _this._emit('changePolygon', {\n            index: index,\n            pathId: pathId,\n            loc: newPos\n          });\n\n          editPaths[value] = pos[value]; // 防止点在延长线上动\n\n          var _this$getDurationPoin = _this.getDurationPoints(checkedPaths),\n              xMin = _this$getDurationPoin.xMin,\n              xMax = _this$getDurationPoin.xMax,\n              yMin = _this$getDurationPoin.yMin,\n              yMax = _this$getDurationPoin.yMax;\n\n          if (pos[0] < xMin) {\n            pos[0] = xMin;\n          } else if (pos[0] > xMax) {\n            pos[0] = xMax;\n          } else if (pos[1] < yMin) {\n            pos[1] = yMin;\n          } else if (pos[1] > yMax) {\n            pos[1] = yMax;\n          }\n\n          _this.drawEditRect(_this.checkedIndex, pos);\n\n          _this._emit('layersMove', true);\n        } else {\n          _this.drawRect();\n        }\n      } else {\n        _this.drawEditRect(_this.checkedIndex);\n\n        _this._emit('layersMove', false, _this.preAddLoc);\n      }\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"imageDargEndCallback\", function () {\n      var coordinates = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : [];\n      var coordinate = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : [];\n      _this.coordinates = _this.formateCoordinatesScale(coordinates);\n      _this.coordinate = _this.formateCoordinateScale(coordinate);\n\n      _this.drawRect();\n    });\n\n    _this.threshold = 5;\n    _this.circleRadius = 3;\n    _this.editFlag = false;\n    _this.editPos = {};\n    _this.checkedIndex = -1;\n\n    _this._initOn();\n\n    return _this;\n  }\n\n  _createClass(Rect, [{\n    key: \"_drawCircle\",\n    value: function _drawCircle(pos, strokeColor, fillColor) {\n      this._context.lineWidth = 1;\n\n      this._context.beginPath();\n\n      this._context.strokeStyle = strokeColor || this.strokeColor;\n\n      this._context.arc(pos[0], pos[1], this.circleRadius, 0, 2 * Math.PI, true);\n\n      this._context.stroke();\n\n      this._context.fillStyle = fillColor || this.fillColor;\n\n      this._context.fill();\n    }\n  }, {\n    key: \"drawAlreadyRect\",\n    value: function drawAlreadyRect() {\n      var _this2 = this;\n\n      if (this.coordinates.length > 0) {\n        this.coordinates && this.coordinates.forEach(function (posInfo, index) {\n          var posList = posInfo.paths || [];\n          var pos0 = posList[0] || [];\n          var pos1 = posList[1] || [];\n          var x0 = pos0[0];\n          var y0 = pos0[1];\n          var x1 = pos1[0];\n          var y1 = pos1[1];\n\n          _this2._drawRect(x0, y0, x1 - x0, y1 - y0, true);\n\n          if (_this2.checkedIndex === index) {\n            // 被选中的矩形\n            var pos2 = [x0, y1];\n            var pos3 = [x1, y0];\n            var strokeColor = _this2.fillColor;\n            var fillColor = _this2.strokeColor;\n\n            _this2._drawCircle(pos0, strokeColor, fillColor);\n\n            _this2._drawCircle(pos1, strokeColor, fillColor);\n\n            _this2._drawCircle(pos2, strokeColor, fillColor);\n\n            _this2._drawCircle(pos3, strokeColor, fillColor);\n          }\n        });\n      }\n    }\n  }, {\n    key: \"drawEditRect\",\n    value: function drawEditRect(checkedIndex, pos) {\n      var _this3 = this;\n\n      this.coordinates && this.coordinates.forEach(function (posInfo, index) {\n        var posList = posInfo.paths;\n\n        if (posList.length == 2) {\n          var pos0 = posList[0] || [];\n          var pos1 = posList[1] || [];\n          var x0 = pos0[0];\n          var y0 = pos0[1];\n          var x1 = pos1[0];\n          var y1 = pos1[1];\n\n          _this3._drawRect(x0, y0, x1 - x0, y1 - y0, true);\n\n          if (checkedIndex == index) {\n            var pos2 = [x0, y1];\n            var pos3 = [x1, y0];\n            var strokeColor = _this3.fillColor;\n            var fillColor = _this3.strokeColor;\n\n            _this3._drawCircle(pos0, strokeColor, fillColor);\n\n            _this3._drawCircle(pos1, strokeColor, fillColor);\n\n            _this3._drawCircle(pos2, strokeColor, fillColor);\n\n            _this3._drawCircle(pos3, strokeColor, fillColor);\n\n            if (pos) {\n              _this3._drawCircle(pos);\n            }\n          }\n        }\n      });\n    }\n  }, {\n    key: \"getDurationPoints\",\n    value: function getDurationPoints(points) {\n      var xList = points.map(function (val) {\n        return val[0];\n      });\n      var yList = points.map(function (val) {\n        return val[1];\n      });\n      var xMin = Math.min.apply(Math, _toConsumableArray(xList));\n      var xMax = Math.max.apply(Math, _toConsumableArray(xList));\n      var yMin = Math.min.apply(Math, _toConsumableArray(yList));\n      var yMax = Math.max.apply(Math, _toConsumableArray(yList));\n      return {\n        xMin: xMin,\n        xMax: xMax,\n        yMin: yMin,\n        yMax: yMax\n      };\n    }\n  }]);\n\n  return Rect;\n}(BaseCanvas);\n\nexport default Rect;",{"version":3,"sources":["/Users/kscit/Documents/study/my-vue-example/src/view/canvas/RectLayer.js"],"names":["BaseCanvas","Rect","_on","eidtEnd","drawEnd","editPos","type","coordinates","coordinate","formateCoordinatesScale","formateCoordinateScale","clearFlag","drawRect","editFlag","checkedIndex","posList","pos","pos0","pos1","x0","x1","y0","y1","x","y","Math","abs","threshold","index","value","drawEditRect","i","length","paths","pos2","_context","beginPath","rect","isPointInPath","width","height","fillFlag","lineWidth","strokeStyle","strokeColor","stroke","fillStyle","fillColor","fill","drawAlreadyRect","_drawRect","_isPointInPath","preAddLoc","_emit","drawMoveRect","_judgeNearLeastDot","Object","keys","pathId","checkedPaths","editPaths","newPos","loc","getDurationPoints","xMin","xMax","yMin","yMax","circleRadius","_initOn","arc","PI","forEach","posInfo","pos3","_drawCircle","points","xList","map","val","yList","min","max"],"mappings":"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","sourcesContent":["import BaseCanvas from './baseCanvas';\n\nclass Rect extends BaseCanvas {\n\n    constructor() {\n        super();\n        this.threshold = 5;\n        this.circleRadius = 3;\n        this.editFlag = false;\n        this.editPos = {};\n        this.checkedIndex = -1;\n        this._initOn();\n\n    }\n\n    _initOn = () => {\n        this._on('eidtEnd', this.eidtEnd, this);\n        this._on('drawEnd', this.drawEnd, this);\n    }\n\n    eidtEnd = () => {\n        this.editPos = {};\n    }\n    drawEnd = (type, coordinates, coordinate) => {\n\n        if (type == 'rect') {\n            this.coordinates = this.formateCoordinatesScale(coordinates);\n            this.coordinate = this.formateCoordinateScale(coordinate);\n            this.clearFlag();\n            this.drawRect();\n        }\n    }\n\n    // 清空绘制状态\n    clearFlag = () => {\n        this.editFlag = false;\n        this.checkedIndex = -1;\n        this.editPos = {};\n    }\n\n    /**\n     * 获取最近点\n     */\n    _judgeNearLeastDot = (posList, pos) => {\n\n        const pos0 = posList[0];\n        const pos1 = posList[1];\n        const x0 = pos0[0];\n        const x1 = pos1[0];\n        const y0 = pos0[1];\n        const y1 = pos1[1];\n        const x = pos[0];\n        const y = pos[1];\n        if ((y <= y1 && y >= y0) || (y <= y0 && y >= y1)) {\n            if (Math.abs(x0 - x) <= this.threshold) {\n                this.editPos = { index: 0, value: 0 };\n                this.editFlag = true;\n\n                this.drawEditRect(this.checkedIndex, [x0, pos[1]]);\n\n                return;\n            } else if (Math.abs(x1 - x) <= this.threshold) {\n                this.editPos = { index: 1, value: 0 };\n                this.editFlag = true;\n                this.drawEditRect(this.checkedIndex, [x1, pos[1]]);\n                return;\n            }\n        }\n        if ((x >= x0 && x <= x1) || (x >= x1 && x <= x0)) {\n            if (Math.abs(y0 - y) <= this.threshold) {\n                this.editPos = { index: 0, value: '1' };\n                this.editFlag = true;\n                this.drawEditRect(this.checkedIndex, [pos[0], y0]);\n                return;\n            } else if (Math.abs(y1 - y) <= this.threshold) {\n                this.editPos = { index: 1, value: '1' };\n                this.editFlag = true;\n                this.drawEditRect(this.checkedIndex, [pos[0], y1]);\n                return;\n            }\n        }\n        this.editPos = {}\n        this.drawEditRect(this.checkedIndex);\n    }\n\n    _isPointInPath = (pos) => {\n        const coordinates = this.coordinates || [];\n        for (let i = coordinates.length - 1; i > -1; i--) {\n            const [pos1, pos2] = coordinates[i] && coordinates[i].paths;\n\n            this._context.beginPath();\n            this._context.rect(pos1[0], pos1[1], pos2[0] - pos1[0], pos2[1] - pos1[1]);\n            if (this._context.isPointInPath(pos[0], pos[1])) {\n                return i;\n            }\n            if (this._context.isPointInPath(pos[0] + this.threshold, pos[1])) {\n                return i;\n            }\n            if (this._context.isPointInPath(pos[0], pos[1] + this.threshold)) {\n                return i;\n            }\n            if (this._context.isPointInPath(pos[0] + this.threshold, pos[1] + this.threshold)) {\n                return i;\n            }\n            if (this._context.isPointInPath(pos[0] - this.threshold, pos[1])) {\n                return i;\n            }\n            if (this._context.isPointInPath(pos[0] - this.threshold, pos[1] - this.threshold)) {\n                return i;\n            }\n            if (this._context.isPointInPath(pos[0] + this.threshold, pos[1] + this.threshold)) {\n                return i;\n            }\n        }\n\n        return -1;\n    }\n\n    _drawRect = (x, y, width, height, fillFlag) => {\n        this._context.lineWidth = 1;\n        this._context.beginPath();\n        this._context.strokeStyle = this.strokeColor;\n        this._context.rect(x, y, width, height);\n        this._context.stroke();\n        if (fillFlag) {\n            this._context.fillStyle = this.fillColor;\n            this._context.fill();\n        }\n    }\n\n    _drawCircle(pos, strokeColor, fillColor) {\n        this._context.lineWidth = 1;\n        this._context.beginPath();\n        this._context.strokeStyle = strokeColor || this.strokeColor;\n        this._context.arc(pos[0], pos[1], this.circleRadius, 0, 2 * Math.PI, true);\n        this._context.stroke();\n        this._context.fillStyle = fillColor || this.fillColor;\n        this._context.fill();\n    }\n\n    drawAlreadyRect() {\n\n        if (this.coordinates.length > 0) {\n            this.coordinates && this.coordinates.forEach((posInfo, index) => {\n                const posList = posInfo.paths || [];\n                const pos0 = posList[0] || [];\n                const pos1 = posList[1] || [];\n                const x0 = pos0[0];\n                const y0 = pos0[1];\n                const x1 = pos1[0];\n                const y1 = pos1[1];\n                this._drawRect(x0, y0, x1 - x0, y1 - y0, true);\n\n                if (this.checkedIndex === index) {\n                    // 被选中的矩形\n                    const pos2 = [x0, y1];\n                    const pos3 = [x1, y0];\n                    const strokeColor = this.fillColor;\n                    const fillColor = this.strokeColor;\n                    this._drawCircle(pos0, strokeColor, fillColor);\n                    this._drawCircle(pos1, strokeColor, fillColor);\n                    this._drawCircle(pos2, strokeColor, fillColor);\n                    this._drawCircle(pos3, strokeColor, fillColor);\n                }\n            })\n        }\n    }\n\n    drawRect = () => {\n        this.drawAlreadyRect();\n        const coordinate = this.coordinate || [];\n        if (coordinate.length == 1) {\n            const pos = coordinate[0];\n            this._drawRect(pos[0], pos[0], 0, 0);\n        } else if (coordinate.length == 2) {\n            const pos0 = coordinate[0] || {};\n            const pos1 = coordinate[1] || {};\n            const x0 = pos0[0];\n            const y0 = pos0[1];\n            const x1 = pos1[0];\n            const y1 = pos1[1];\n            this._drawRect(x0, y0, x1 - x0, y1 - y0);\n        }\n    };\n\n    drawMoveRect = (pos) => {\n\n        this.drawAlreadyRect();\n        const coordinate = this.coordinate || [];\n\n        if (coordinate.length == 1 && pos) {\n            const pos0 = coordinate[0] || [];\n            const x0 = pos0[0];\n            const y0 = pos0[1];\n            const x1 = pos[0];\n            const y1 = pos[1];\n            this._drawRect(x0, y0, x1 - x0, y1 - y0);\n        }\n    };\n\n\n    drawEditRect(checkedIndex, pos) {\n        this.coordinates && this.coordinates.forEach((posInfo, index) => {\n            const posList = posInfo.paths;\n            if (posList.length == 2) {\n                const pos0 = posList[0] || [];\n                const pos1 = posList[1] || [];\n                const x0 = pos0[0];\n                const y0 = pos0[1];\n                const x1 = pos1[0];\n                const y1 = pos1[1];\n                this._drawRect(x0, y0, x1 - x0, y1 - y0, true);\n                if (checkedIndex == index) {\n                    const pos2 = [x0, y1];\n                    const pos3 = [x1, y0];\n                    const strokeColor = this.fillColor;\n                    const fillColor = this.strokeColor;\n                    this._drawCircle(pos0, strokeColor, fillColor);\n                    this._drawCircle(pos1, strokeColor, fillColor);\n                    this._drawCircle(pos2, strokeColor, fillColor);\n                    this._drawCircle(pos3, strokeColor, fillColor);\n                    if (pos) {\n                        this._drawCircle(pos);\n                    }\n                }\n            }\n\n        })\n\n    }\n\n    getDurationPoints(points) {\n        const xList = points.map(val => val[0]);\n        const yList = points.map(val => val[1]);\n        const xMin = Math.min(...xList);\n        const xMax = Math.max(...xList);\n        const yMin = Math.min(...yList);\n        const yMax = Math.max(...yList);\n        return {\n            xMin,\n            xMax,\n            yMin,\n            yMax\n        };\n    }\n\n\n\n    mouseDown = (coordinates, coordinate, pos) => {\n        this.coordinates = this.formateCoordinatesScale(coordinates);\n        this.coordinate = this.formateCoordinateScale(coordinate);\n        const checkedIndex = this._isPointInPath(pos);\n        this.checkedIndex = checkedIndex;\n\n        if (checkedIndex > -1) {\n            this.editFlag = true;\n\n            if (this.coordinate.length === 1) {\n                this.preAddLoc = pos;\n                this._emit('addLocToCoordinate', pos);\n                this.eidtEnd();\n                this.drawMoveRect(pos);\n            } else {\n                // 选中\n                this._judgeNearLeastDot(this.coordinates[checkedIndex].paths, pos);\n\n                // this.drawMoveRect(pos);\n            }\n\n        } else {\n            if (this.coordinate.length < 2) {\n                this.preAddLoc = pos;\n                this._emit('addLocToCoordinate', pos);\n                this.eidtEnd();\n                this.drawMoveRect(pos);\n            } else {\n                this.drawRect();\n            }\n        }\n\n\n    };\n    mouseMove = (coordinates, coordinate, pos) => {\n\n        this.coordinates = this.formateCoordinatesScale(coordinates);\n        this.coordinate = this.formateCoordinateScale(coordinate);\n        if (this.coordinate.length == 1) {\n            this.drawMoveRect(pos);\n            return;\n        }\n        if (this.checkedIndex > -1) {\n\n            this._judgeNearLeastDot(this.coordinates[this.checkedIndex].paths, pos);\n            // this.drawMoveRect(pos);\n            return;\n        }\n        this.drawMoveRect();\n    };\n\n    mouseMoveDrag = (coordinates, coordinate, pos) => {\n\n        this.coordinates = this.formateCoordinatesScale(coordinates);\n        this.coordinate = this.formateCoordinateScale(coordinate);\n\n\n        if (this.editFlag) {\n            if (this.checkedIndex > -1 && Object.keys(this.editPos).length > 0) {\n\n                const { index, value } = this.editPos;\n                const pathId = this.coordinates[this.checkedIndex] && this.coordinates[this.checkedIndex].pathId;\n                const checkedPaths = this.coordinates[this.checkedIndex] && this.coordinates[this.checkedIndex].paths || [];\n                const editPaths = checkedPaths[index];\n                const newPos = value == 0 ? [pos[value], editPaths[1]] : [editPaths[0], pos[1]]\n                this._emit('changePolygon', { index, pathId, loc: newPos });\n                editPaths[value] = pos[value];\n                // 防止点在延长线上动\n                const { xMin, xMax, yMin, yMax } = this.getDurationPoints(checkedPaths);\n                if (pos[0] < xMin) {\n                    pos[0] = xMin;\n                } else if (pos[0] > xMax) {\n                    pos[0] = xMax;\n                } else if (pos[1] < yMin) {\n                    pos[1] = yMin;\n                } else if (pos[1] > yMax) {\n                    pos[1] = yMax;\n                }\n                this.drawEditRect(this.checkedIndex, pos);\n                this._emit('layersMove', true);\n\n            } else {\n                this.drawRect();\n            }\n        } else {\n            this.drawEditRect(this.checkedIndex);\n            this._emit('layersMove', false, this.preAddLoc);\n        }\n    }\n\n    imageDargEndCallback = (coordinates = [], coordinate = []) => {\n        this.coordinates = this.formateCoordinatesScale(coordinates);\n        this.coordinate = this.formateCoordinateScale(coordinate);\n        this.drawRect();\n    }\n\n\n}\n\n\nexport default Rect;"]}]}