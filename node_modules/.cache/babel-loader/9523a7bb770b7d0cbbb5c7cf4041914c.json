{"remainingRequest":"/Users/kscit/Documents/study/my-vue-example/node_modules/babel-loader/lib/index.js!/Users/kscit/Documents/study/my-vue-example/node_modules/eslint-loader/index.js??ref--13-0!/Users/kscit/Documents/study/my-vue-example/src/view/canvas/imageLayer.js","dependencies":[{"path":"/Users/kscit/Documents/study/my-vue-example/src/view/canvas/imageLayer.js","mtime":1586681220469},{"path":"/Users/kscit/Documents/study/my-vue-example/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/kscit/Documents/study/my-vue-example/node_modules/babel-loader/lib/index.js","mtime":499162500000},{"path":"/Users/kscit/Documents/study/my-vue-example/node_modules/eslint-loader/index.js","mtime":499162500000}],"contextDependencies":[],"result":["import _classCallCheck from \"/Users/kscit/Documents/study/my-vue-example/node_modules/@babel/runtime-corejs2/helpers/esm/classCallCheck\";\nimport _possibleConstructorReturn from \"/Users/kscit/Documents/study/my-vue-example/node_modules/@babel/runtime-corejs2/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/Users/kscit/Documents/study/my-vue-example/node_modules/@babel/runtime-corejs2/helpers/esm/getPrototypeOf\";\nimport _assertThisInitialized from \"/Users/kscit/Documents/study/my-vue-example/node_modules/@babel/runtime-corejs2/helpers/esm/assertThisInitialized\";\nimport _inherits from \"/Users/kscit/Documents/study/my-vue-example/node_modules/@babel/runtime-corejs2/helpers/esm/inherits\";\nimport _defineProperty from \"/Users/kscit/Documents/study/my-vue-example/node_modules/@babel/runtime-corejs2/helpers/esm/defineProperty\";\nimport BaseCanvas from \"./baseCanvas\";\n\nvar ImageLayer =\n/*#__PURE__*/\nfunction (_BaseCanvas) {\n  _inherits(ImageLayer, _BaseCanvas);\n\n  function ImageLayer(_ref) {\n    var _this;\n\n    var imageUrl = _ref.imageUrl,\n        _ratio = _ref.ratio,\n        ratioStep = _ref.ratioStep,\n        ratioMaxTimes = _ref.ratioMaxTimes,\n        canvas = _ref.canvas;\n\n    _classCallCheck(this, ImageLayer);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(ImageLayer).call(this, canvas));\n\n    _defineProperty(_assertThisInitialized(_this), \"changeUrl\", function (url) {\n      _this._url = url;\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"initLayer\", function () {\n      return new Promise(function (resolve, reject) {\n        _this.$imageDom = new Image();\n        _this.$imageDom.src = _this._url;\n\n        _this.$imageDom.onload = function () {\n          _this.imageOriginWidth = _this.$imageDom.width;\n          _this.imageOriginHeight = _this.$imageDom.height;\n\n          _this.operateImageSize('moderate');\n\n          resolve();\n        };\n\n        _this.$imageDom.onerror = function () {\n          reject();\n        };\n      });\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"drawImage\", function () {\n      if (_this.$imageDom) {\n        try {\n          _this._context.drawImage(_this.$imageDom, 0, 0, _this.imageOriginWidth, _this.imageOriginHeight, _this.offsetX, _this.offsetY, _this.imageOriginWidth * _this.currentRatio, _this.imageOriginHeight * _this.currentRatio);\n\n          return Promise.resolve();\n        } catch (e) {\n          console.log(e);\n        }\n      }\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"operateImageSize\", function (type, e) {\n      if (type == 'reduce' && _this.currentRatio - _this.ratioStep + 0.01 < _this.MINRATIO) return;\n      if (type == 'amplification' && _this.MINRATIO + _this.ratioStep * (_this.maxTimes - 1) < _this.currentRatio) return;\n      var dir = null;\n\n      switch (type) {\n        case 'amplification':\n          dir = 1;\n          break;\n\n        case 'reduce':\n          dir = -1;\n          break;\n\n        case 'moderate':\n          // 用于判断是宽和高哪个与父容器相等\n          // eslint-disable-next-line no-case-declarations\n          var imageRatio = _this.imageOriginWidth / _this.imageOriginHeight; // eslint-disable-next-line no-case-declarations\n\n          var canvasRatio = _this.CANVASWIDTH / _this.CANVASHEIGHT;\n\n          if (imageRatio > canvasRatio) {\n            _this.currentRatio = _this.CANVASWIDTH / _this.imageOriginWidth;\n          } else {\n            _this.currentRatio = _this.CANVASHEIGHT / _this.imageOriginHeight;\n          }\n\n          _this.MINRATIO = _this.currentRatio;\n\n          if (_this.currentRatio > 1) {\n            _this.currentRatio = _this.MINRATIO = 1;\n          }\n\n          break;\n      }\n\n      if (dir) {\n        // 放大 或者缩小\n        _this.currentRatio += dir * _this.ratioStep;\n        console.log(_this.currentRatio, _this.MINRATIO);\n        var centerX = e && e.offsetX || _this.CANVASWIDTH / 2;\n        var centerY = e && e.offsetY || _this.CANVASHEIGHT / 2;\n\n        _this.getOffset(centerX, centerY, _this.currentRatio, _this.ratioStep, dir);\n      } else {\n        // 自适应\n        _this.offsetX = (_this.CANVASWIDTH - _this.imageOriginWidth * _this.currentRatio) * 0.5;\n        _this.offsetY = (_this.CANVASHEIGHT - _this.imageOriginHeight * _this.currentRatio) * 0.5;\n      }\n\n      _this._emit('changeImgProps', {\n        scale: _this.currentRatio,\n        offsetX: _this.offsetX,\n        offsetY: _this.offsetY\n      });\n\n      _this.drawImage();\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"getOffset\", function (pointX, pointY, scale, ratio, dir) {\n      if (pointX && pointY) {\n        // 获取图片\n        var width = _this.imageOriginWidth * (scale - ratio * dir);\n        var height = _this.imageOriginHeight * (scale - ratio * dir);\n        var x = _this.offsetX;\n        var y = _this.offsetY;\n\n        if (pointX < x && pointY >= y && pointY <= y + height) {\n          // 1\n          _this.offsetY = pointY - (pointY - _this.offsetY) / (scale - ratio * dir) * scale;\n        } else if (pointX < x && pointY >= y + height) {\n          // 2\n          _this.offsetX = x;\n          _this.offsetY = (ratio * dir * _this.imageOriginHeight - _this.offsetY) * -1;\n        } else if (pointX > x + width && pointY >= y && pointY <= y + height) {\n          // 5\n          _this.offsetY = pointY - (pointY - _this.offsetY) / (scale - ratio * dir) * scale;\n          _this.offsetX = (ratio * dir * _this.imageOriginWidth - _this.offsetX) * -1;\n        } else if (pointX >= x && pointX <= x + width && pointY > y + height) {\n          // 3\n          _this.offsetX = pointX - (pointX - _this.offsetX) / (scale - ratio * dir) * scale;\n          _this.offsetY = (ratio * dir * _this.imageOriginHeight - _this.offsetY) * -1;\n        } else if (pointY < y && pointX >= x && pointX <= x + width) {\n          // 7\n          _this.offsetX = pointX - (pointX - _this.offsetX) / (scale - ratio * dir) * scale;\n          _this.offsetY = y;\n        } else if (pointX > x + width && pointY > y + height) {\n          // 4\n          _this.offsetX = (ratio * dir * _this.imageOriginWidth - _this.offsetX) * -1;\n          _this.offsetY = (ratio * dir * _this.imageOriginHeight - _this.offsetY) * -1;\n        } else if (pointX > x + width && pointY < y) {\n          // 6\n          _this.offsetY = y;\n          _this.offsetX = (ratio * dir * _this.imageOriginWidth - _this.offsetX) * -1;\n        } else if (pointX < x && pointY < y) {\n          //  8 \n          _this.offsetX = x;\n          _this.offsetY = y;\n        } else {\n          // 9 \n          _this.offsetX = pointX - (pointX - _this.offsetX) / (scale - ratio * dir) * scale;\n          _this.offsetY = pointY - (pointY - _this.offsetY) / (scale - ratio * dir) * scale;\n        }\n      }\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"mouseDownStart\", function (e) {\n      _this.rangeX = e.offsetX - _this.offsetX;\n      _this.rangeY = e.offsetY - _this.offsetY;\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"mouseDownMove\", function (e) {\n      _this.offsetX = e.offsetX - _this.rangeX;\n      _this.offsetY = e.offsetY - _this.rangeY;\n\n      _this._emit('changeImgProps', {\n        scale: _this.currentRatio,\n        offsetX: _this.offsetX,\n        offsetY: _this.offsetY\n      });\n\n      return _this.drawImage();\n    });\n\n    if (canvas) {\n      if (imageUrl) {\n        _this._context = canvas.getContext('2d');\n        _this._url = imageUrl; // img url\n\n        _this.CANVASWIDTH = canvas.width;\n        _this.CANVASHEIGHT = canvas.height;\n        _this.MINRATIO = _this.currentRatio = _ratio; // 最小放大比例 ，当前放大比例\n\n        _this.imageOriginWidth = 1; // 图片原始宽度\n\n        _this.imageOriginHeight = 1; // 图片原始长度\n\n        _this.ratioStep = ratioStep || 0.8; // 默认放大缩小比例\n\n        _this.maxTimes = ratioMaxTimes || 4; // 最大放大次数\n\n        _this.offsetX = 0;\n        _this.offsetY = 0;\n        _this.rangeX = 0;\n        _this.rangeY = 0;\n\n        _this.initLayer();\n      }\n    } else {\n      console.error('ImageLayer need canvas ');\n    }\n\n    return _this;\n  } // 更改图片url 重新绘制\n\n\n  return ImageLayer;\n}(BaseCanvas);\n\nexport default ImageLayer;",{"version":3,"sources":["/Users/kscit/Documents/study/my-vue-example/src/view/canvas/imageLayer.js"],"names":["BaseCanvas","ImageLayer","imageUrl","ratio","ratioStep","ratioMaxTimes","canvas","url","_url","Promise","resolve","reject","$imageDom","Image","src","onload","imageOriginWidth","width","imageOriginHeight","height","operateImageSize","onerror","_context","drawImage","offsetX","offsetY","currentRatio","e","console","log","type","MINRATIO","maxTimes","dir","imageRatio","canvasRatio","CANVASWIDTH","CANVASHEIGHT","centerX","centerY","getOffset","_emit","scale","pointX","pointY","x","y","rangeX","rangeY","getContext","initLayer","error"],"mappings":"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","sourcesContent":["import BaseCanvas from './baseCanvas';\n\nclass ImageLayer extends BaseCanvas {\n    constructor({\n        imageUrl,\n        ratio,\n        ratioStep,\n        ratioMaxTimes,\n        canvas\n\n    }) {\n        super(canvas);\n        if (canvas) {\n            if (imageUrl) {\n                this._context = canvas.getContext('2d');\n                this._url = imageUrl;  // img url\n                this.CANVASWIDTH = canvas.width;\n                this.CANVASHEIGHT = canvas.height;\n                this.MINRATIO = this.currentRatio = ratio;   // 最小放大比例 ，当前放大比例\n                this.imageOriginWidth = 1;  // 图片原始宽度\n                this.imageOriginHeight = 1;  // 图片原始长度\n                this.ratioStep = ratioStep || 0.8; // 默认放大缩小比例\n                this.maxTimes = ratioMaxTimes || 4; // 最大放大次数\n                this.offsetX = 0;\n                this.offsetY = 0;\n                this.rangeX = 0;\n                this.rangeY = 0;\n                this.initLayer();\n            }\n        } else {\n            console.error('ImageLayer need canvas ');\n        }\n    }\n\n    // 更改图片url 重新绘制\n\n    changeUrl = (url) => {\n        this._url = url;\n    }\n    // 初始化图层信息\n    initLayer = () => {\n        return new Promise((resolve, reject) => {\n            this.$imageDom = new Image();\n            this.$imageDom.src = this._url;\n            this.$imageDom.onload = () => {\n                this.imageOriginWidth = this.$imageDom.width;\n                this.imageOriginHeight = this.$imageDom.height;\n                this.operateImageSize('moderate');\n                resolve();\n            }\n            this.$imageDom.onerror = () => {\n                reject();\n            }\n        })\n    }\n\n    // 绘制图片\n    drawImage = () => {\n        if (this.$imageDom) {\n            try {\n                this._context.drawImage(\n                    this.$imageDom,\n                    0,\n                    0,\n                    this.imageOriginWidth,\n                    this.imageOriginHeight,\n                    this.offsetX,\n                    this.offsetY,\n                    this.imageOriginWidth * this.currentRatio,\n                    this.imageOriginHeight * this.currentRatio\n                );\n\n                return Promise.resolve();\n\n            } catch (e) {\n                console.log(e)\n            }\n        }\n    }\n\n    /**\n     *\n     * 图片放大或者缩小\n     * @param {*} type\n     * @param {*} e\n     * @returns\n     * @memberof ImageCanvas\n     */\n    operateImageSize = (type, e) => {\n        if (type == 'reduce' && (this.currentRatio - this.ratioStep + 0.01) < this.MINRATIO) return;\n        if (type == 'amplification' && (this.MINRATIO + this.ratioStep * (this.maxTimes - 1)) < this.currentRatio) return;\n        let dir = null;\n        switch (type) {\n            case 'amplification':\n                dir = 1;\n                break;\n            case 'reduce':\n                dir = -1;\n                break;\n            case 'moderate':\n                // 用于判断是宽和高哪个与父容器相等\n                // eslint-disable-next-line no-case-declarations\n                const imageRatio = this.imageOriginWidth / this.imageOriginHeight;\n                // eslint-disable-next-line no-case-declarations\n                const canvasRatio = this.CANVASWIDTH / this.CANVASHEIGHT;\n                if (imageRatio > canvasRatio) {\n                    this.currentRatio = this.CANVASWIDTH / this.imageOriginWidth;\n                } else {\n                    this.currentRatio = this.CANVASHEIGHT / this.imageOriginHeight;\n                }\n\n                this.MINRATIO = this.currentRatio;\n                if (this.currentRatio > 1) {\n                    this.currentRatio = this.MINRATIO = 1;\n                }\n                break;\n        }\n        if (dir) {\n            // 放大 或者缩小\n            this.currentRatio += dir * this.ratioStep;\n            console.log(this.currentRatio, this.MINRATIO);\n\n            const centerX = e && e.offsetX || this.CANVASWIDTH / 2;\n            const centerY = e && e.offsetY || this.CANVASHEIGHT / 2;\n\n            this.getOffset(centerX, centerY, this.currentRatio, this.ratioStep, dir);\n\n        } else {\n\n            // 自适应\n            this.offsetX = (this.CANVASWIDTH - this.imageOriginWidth * this.currentRatio) * 0.5;\n            this.offsetY = (this.CANVASHEIGHT - this.imageOriginHeight * this.currentRatio) * 0.5;\n        }\n\n        this._emit('changeImgProps', { scale: this.currentRatio, offsetX: this.offsetX, offsetY: this.offsetY });\n\n        this.drawImage();\n    }\n    // 获取坐标点是否在图片中，如果不在图片中则选择靠近图片一边的位置, 如果再图片的四个顶角外面则采用顶角放大原则\n    getOffset = (pointX, pointY, scale, ratio, dir) => {\n        if (pointX && pointY) {\n            // 获取图片\n            const width = this.imageOriginWidth * (scale - ratio * dir);\n            const height = this.imageOriginHeight * (scale - ratio * dir);\n            const x = this.offsetX;\n            const y = this.offsetY;\n            if ((pointX < x) && (pointY >= y && pointY <= y + height)\n            ) {\n                // 1\n                this.offsetY = pointY - (pointY - this.offsetY) / (scale - ratio * dir) * scale;\n\n            } else if ((pointX < x) && pointY >= y + height) {\n                // 2\n                this.offsetX = x;\n                this.offsetY = (ratio * dir * this.imageOriginHeight - this.offsetY) * (-1);\n            } else if (pointX > x + width && (pointY >= y && pointY <= y + height)) {\n                // 5\n                this.offsetY = pointY - (pointY - this.offsetY) / (scale - ratio * dir) * scale;\n                this.offsetX = (ratio * dir * this.imageOriginWidth - this.offsetX) * (-1);\n            } else if ((pointX >= x && pointX <= x + width) && (pointY > y + height)) {\n                // 3\n                this.offsetX = pointX - (pointX - this.offsetX) / (scale - ratio * dir) * scale;\n                this.offsetY = (ratio * dir * this.imageOriginHeight - this.offsetY) * (-1);\n            } else if (pointY < y && (pointX >= x && pointX <= x + width)) {\n                // 7\n                this.offsetX = pointX - (pointX - this.offsetX) / (scale - ratio * dir) * scale;\n                this.offsetY = y;\n            } else if (pointX > x + width && (pointY > y + height)) {\n                // 4\n                this.offsetX = (ratio * dir * this.imageOriginWidth - this.offsetX) * (-1);\n                this.offsetY = (ratio * dir * this.imageOriginHeight - this.offsetY) * (-1);\n            } else if (pointX > x + width && pointY < y) {\n                // 6\n                this.offsetY = y;\n                this.offsetX = (ratio * dir * this.imageOriginWidth - this.offsetX) * (-1);\n            } else if (pointX < x && pointY < y) {\n                //  8 \n                this.offsetX = x;\n                this.offsetY = y;\n            } else {\n                // 9 \n                this.offsetX = pointX - (pointX - this.offsetX) / (scale - ratio * dir) * scale;\n                this.offsetY = pointY - (pointY - this.offsetY) / (scale - ratio * dir) * scale;\n\n            }\n        }\n    }\n\n    // 鼠标按下记录当前点信息\n    mouseDownStart = (e) => {\n        this.rangeX = e.offsetX - this.offsetX;\n        this.rangeY = e.offsetY - this.offsetY;\n    }\n\n    // 鼠标移动时计算offset值 并重新绘制\n\n    mouseDownMove = (e) => {\n        this.offsetX = e.offsetX - this.rangeX;\n        this.offsetY = e.offsetY - this.rangeY;\n        this._emit('changeImgProps', { scale: this.currentRatio, offsetX: this.offsetX, offsetY: this.offsetY });\n        return this.drawImage();\n    }\n\n}\n\n\nexport default ImageLayer;"]}]}