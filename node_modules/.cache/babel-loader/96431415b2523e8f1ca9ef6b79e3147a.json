{"remainingRequest":"/Users/kscit/Documents/study/my-vue-example/node_modules/babel-loader/lib/index.js!/Users/kscit/Documents/study/my-vue-example/node_modules/eslint-loader/index.js??ref--13-0!/Users/kscit/Documents/study/my-vue-example/src/view/canvas/baseCanvas.js","dependencies":[{"path":"/Users/kscit/Documents/study/my-vue-example/src/view/canvas/baseCanvas.js","mtime":1586078454641},{"path":"/Users/kscit/Documents/study/my-vue-example/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/kscit/Documents/study/my-vue-example/node_modules/babel-loader/lib/index.js","mtime":499162500000},{"path":"/Users/kscit/Documents/study/my-vue-example/node_modules/eslint-loader/index.js","mtime":499162500000}],"contextDependencies":[],"result":["import \"core-js/modules/es7.object.get-own-property-descriptors\";\nimport \"core-js/modules/es6.object.keys\";\nimport \"core-js/modules/web.dom.iterable\";\nimport _slicedToArray from \"/Users/kscit/Documents/study/my-vue-example/node_modules/@babel/runtime-corejs2/helpers/esm/slicedToArray\";\nimport _classCallCheck from \"/Users/kscit/Documents/study/my-vue-example/node_modules/@babel/runtime-corejs2/helpers/esm/classCallCheck\";\nimport _createClass from \"/Users/kscit/Documents/study/my-vue-example/node_modules/@babel/runtime-corejs2/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/Users/kscit/Documents/study/my-vue-example/node_modules/@babel/runtime-corejs2/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/Users/kscit/Documents/study/my-vue-example/node_modules/@babel/runtime-corejs2/helpers/esm/getPrototypeOf\";\nimport _assertThisInitialized from \"/Users/kscit/Documents/study/my-vue-example/node_modules/@babel/runtime-corejs2/helpers/esm/assertThisInitialized\";\nimport _inherits from \"/Users/kscit/Documents/study/my-vue-example/node_modules/@babel/runtime-corejs2/helpers/esm/inherits\";\nimport _defineProperty from \"/Users/kscit/Documents/study/my-vue-example/node_modules/@babel/runtime-corejs2/helpers/esm/defineProperty\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(source, true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(source).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nimport BaseEvent from \"./eventBus\";\n\nvar BaseCanvas =\n/*#__PURE__*/\nfunction (_BaseEvent) {\n  _inherits(BaseCanvas, _BaseEvent);\n\n  function BaseCanvas() {\n    var _this;\n\n    _classCallCheck(this, BaseCanvas);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(BaseCanvas).call(this)); // BaseCanvas.prototype._canvas = canvas;\n    // BaseCanvas.prototype._context = this._canvas && this._canvas.getContext('2d');\n\n    _defineProperty(_assertThisInitialized(_this), \"initCanvasOptions\", function (canvas, layersOptions) {\n      BaseCanvas.prototype._canvas = canvas;\n      BaseCanvas.prototype._context = _this._canvas && _this._canvas.getContext('2d');\n\n      var _ref = layersOptions || {},\n          _ref$fillColor = _ref.fillColor,\n          fillColor = _ref$fillColor === void 0 ? _this.fillColor : _ref$fillColor,\n          _ref$strokeColor = _ref.strokeColor,\n          strokeColor = _ref$strokeColor === void 0 ? _this.strokeColor : _ref$strokeColor;\n\n      BaseCanvas.prototype.fillColor = fillColor;\n      BaseCanvas.prototype.strokeColor = strokeColor;\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"changeImgProps\", function (_ref2) {\n      var scale = _ref2.scale,\n          offsetX = _ref2.offsetX,\n          offsetY = _ref2.offsetY;\n      _this.scale = scale || 1;\n      _this.offsetX = offsetX || 0;\n      _this.offsetY = offsetY || 0;\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"_windowToCanvas\", function (x, y) {\n      var bbox = _this._canvas.getBoundingClientRect(); // 获取canvas元素的边界框\n\n\n      return [x - bbox.left * (_this._canvas.width / bbox.width), y - bbox.top * (_this._canvas.height / bbox.height)];\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"_clearCanvas\", function () {\n      _this._context.clearRect(0, 0, _this._canvas.width, _this._canvas.height);\n\n      return _assertThisInitialized(_this);\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"_formateDotScale\", function () {\n      var dot = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : [];\n\n      var _dot = _slicedToArray(dot, 2),\n          x = _dot[0],\n          y = _dot[1];\n\n      var newX = x * _this.scale + _this.offsetX;\n      var newY = y * _this.scale + _this.offsetY;\n      return [newX, newY];\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"_formateDotBase\", function () {\n      var dot = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : [];\n\n      var _dot2 = _slicedToArray(dot, 2),\n          x = _dot2[0],\n          y = _dot2[1];\n\n      var newX = (x - _this.offsetX) / _this.scale;\n      var newY = (y - _this.offsetY) / _this.scale;\n      return [newX, newY];\n    });\n\n    _this.scale = 1;\n    _this.offsetX = 0;\n    _this.offsetY = 0;\n    _this.strokeColor = 'blue';\n    _this.fillColor = 'rgba(255,255,255,0.2)';\n\n    _this._initOn();\n\n    return _this;\n  }\n\n  _createClass(BaseCanvas, [{\n    key: \"_initOn\",\n    value: function _initOn() {\n      this._on('changeImgProps', this.changeImgProps, this);\n\n      this._on('initCanvasOptions', this.initCanvasOptions, this);\n    }\n    /**\n     * 给canvas context canvas 绘图环境赋值\n     */\n\n  }, {\n    key: \"formateCoordinatesScale\",\n\n    /**\n     * 将数组转化成放大或者缩小之后的数组\n     * @param {*} scale \n     * @param {*} offsetX \n     * @param {*} offsetY \n     * @param {*} coordinates \n     */\n    value: function formateCoordinatesScale() {\n      var _this2 = this;\n\n      var coordinates = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : [];\n      var coordinates1 = [];\n      coordinates.forEach(function (coordinate) {\n        var map = _objectSpread({}, coordinate, {\n          paths: coordinate.paths.map(function (val) {\n            return _this2._formateDotScale(val);\n          })\n        });\n\n        coordinates1.push(map);\n      });\n      return coordinates1;\n    }\n    /**\n     * 将当前绘制数组 转换成放大或者缩小之后的数组\n     * @param {*} scale \n     * @param {*} offsetX \n     * @param {*} offsetY \n     * @param {*} coordinate \n     */\n\n  }, {\n    key: \"formateCoordinateScale\",\n    value: function formateCoordinateScale() {\n      var _this3 = this;\n\n      var coordinate = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : [];\n      return coordinate.map(function (val) {\n        return _this3._formateDotScale(val);\n      });\n    }\n  }]);\n\n  return BaseCanvas;\n}(BaseEvent);\n\nexport default BaseCanvas;",{"version":3,"sources":["/Users/kscit/Documents/study/my-vue-example/src/view/canvas/baseCanvas.js"],"names":["BaseEvent","BaseCanvas","canvas","layersOptions","prototype","_canvas","_context","getContext","fillColor","strokeColor","scale","offsetX","offsetY","x","y","bbox","getBoundingClientRect","left","width","top","height","clearRect","dot","newX","newY","_initOn","_on","changeImgProps","initCanvasOptions","coordinates","coordinates1","forEach","coordinate","map","paths","val","_formateDotScale","push"],"mappings":"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","sourcesContent":["import BaseEvent from './eventBus'\n\nclass BaseCanvas extends BaseEvent {\n\n    constructor() {\n        super();\n        // BaseCanvas.prototype._canvas = canvas;\n        // BaseCanvas.prototype._context = this._canvas && this._canvas.getContext('2d');\n        this.scale = 1;\n        this.offsetX = 0;\n        this.offsetY = 0;\n        this.strokeColor = 'blue';\n        this.fillColor = 'rgba(255,255,255,0.2)'\n\n        this._initOn();\n    }\n\n    _initOn() {\n        this._on('changeImgProps', this.changeImgProps, this);\n        this._on('initCanvasOptions', this.initCanvasOptions, this);\n    }\n    /**\n     * 给canvas context canvas 绘图环境赋值\n     */\n    initCanvasOptions = (canvas, layersOptions) => {\n\n        BaseCanvas.prototype._canvas = canvas;\n\n        BaseCanvas.prototype._context = this._canvas && this._canvas.getContext('2d');\n\n        const { fillColor = this.fillColor, strokeColor = this.strokeColor } = layersOptions || {};\n        BaseCanvas.prototype.fillColor = fillColor;\n        BaseCanvas.prototype.strokeColor = strokeColor;\n\n    }\n\n    /**\n     * 重置当前放大缩小倍数或者拖动距离\n     * @param {*} param0 \n     */\n    changeImgProps = ({ scale, offsetX, offsetY }) => {\n        this.scale = scale || 1;\n        this.offsetX = offsetX || 0;\n        this.offsetY = offsetY || 0;\n\n    }\n\n    // 将坐标转化成相对canvas画布左边\n    _windowToCanvas = (x, y) => {\n        const bbox = this._canvas.getBoundingClientRect(); // 获取canvas元素的边界框\n        return [\n            x - bbox.left * (this._canvas.width / bbox.width),\n            y - bbox.top * (this._canvas.height / bbox.height)\n        ];\n    }\n\n    /**\n   * 清空画布公共方法\n   */\n    _clearCanvas = () => {\n        this._context.clearRect(0, 0, this._canvas.width, this._canvas.height);\n        return this;\n    }\n    /**\n     * 将相对图片的基础值转化成拖拽放大或者缩小之后想对于基础数据的值\n     * @param {*} scale \n     * @param {*} offsetX \n     * @param {*} offsetY \n     * @param {*} dot \n     */\n    _formateDotScale = (dot = []) => {\n        const [x, y] = dot;\n        const newX = x * this.scale + this.offsetX;\n        const newY = y * this.scale + this.offsetY;\n\n        return [\n            newX,\n            newY\n        ];\n    }\n    /**\n     * 将当前点坐标转换成相对于原始图片的尺寸的坐标大小\n     * @param {*} scale \n     * @param {*} offsetX \n     * @param {*} offsetY \n     * @param {*} dot \n     */\n    _formateDotBase = (dot = []) => {\n        const [x, y] = dot;\n        const newX = (x - this.offsetX) / this.scale;\n        const newY = (y - this.offsetY) / this.scale;\n        return [\n            newX,\n            newY\n        ];\n    }\n\n    /**\n     * 将数组转化成放大或者缩小之后的数组\n     * @param {*} scale \n     * @param {*} offsetX \n     * @param {*} offsetY \n     * @param {*} coordinates \n     */\n\n    formateCoordinatesScale(coordinates = []) {\n        const coordinates1 = [];\n        coordinates.forEach(coordinate => {\n            const map = {\n                ...coordinate,\n                paths: coordinate.paths.map(val => this._formateDotScale(val))\n            }\n            coordinates1.push(map);\n        });\n        return coordinates1;\n    }\n    /**\n     * 将当前绘制数组 转换成放大或者缩小之后的数组\n     * @param {*} scale \n     * @param {*} offsetX \n     * @param {*} offsetY \n     * @param {*} coordinate \n     */\n    formateCoordinateScale(coordinate = []) {\n\n        return coordinate.map(val => this._formateDotScale(val))\n    }\n\n\n}\n\n\n\nexport default BaseCanvas;"]}]}