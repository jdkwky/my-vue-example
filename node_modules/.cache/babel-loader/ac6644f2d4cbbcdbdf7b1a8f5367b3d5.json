{"remainingRequest":"/Users/kscit/Documents/study/my-vue-example/node_modules/babel-loader/lib/index.js!/Users/kscit/Documents/study/my-vue-example/node_modules/eslint-loader/index.js??ref--13-0!/Users/kscit/Documents/study/my-vue-example/src/view/canvas/index.js","dependencies":[{"path":"/Users/kscit/Documents/study/my-vue-example/src/view/canvas/index.js","mtime":1586680403677},{"path":"/Users/kscit/Documents/study/my-vue-example/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/kscit/Documents/study/my-vue-example/node_modules/babel-loader/lib/index.js","mtime":499162500000},{"path":"/Users/kscit/Documents/study/my-vue-example/node_modules/eslint-loader/index.js","mtime":499162500000}],"contextDependencies":[],"result":["import \"core-js/modules/es7.object.get-own-property-descriptors\";\nimport \"core-js/modules/es6.object.keys\";\nimport \"core-js/modules/web.dom.iterable\";\nimport _slicedToArray from \"/Users/kscit/Documents/study/my-vue-example/node_modules/@babel/runtime-corejs2/helpers/esm/slicedToArray\";\nimport _defineProperty from \"/Users/kscit/Documents/study/my-vue-example/node_modules/@babel/runtime-corejs2/helpers/esm/defineProperty\";\nimport _classCallCheck from \"/Users/kscit/Documents/study/my-vue-example/node_modules/@babel/runtime-corejs2/helpers/esm/classCallCheck\";\nimport _createClass from \"/Users/kscit/Documents/study/my-vue-example/node_modules/@babel/runtime-corejs2/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/Users/kscit/Documents/study/my-vue-example/node_modules/@babel/runtime-corejs2/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/Users/kscit/Documents/study/my-vue-example/node_modules/@babel/runtime-corejs2/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/Users/kscit/Documents/study/my-vue-example/node_modules/@babel/runtime-corejs2/helpers/esm/inherits\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(source, true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(source).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nimport BaseCanvas from \"./baseCanvas\";\nimport ImageLayer from \"./imageLayer\";\nimport PolygonLayer from \"./polygonLayer\";\nimport RectLayer from \"./RectLayer\";\nimport LineLayer from \"./lineLayer\";\nimport ArrowLayer from \"./arrowLayer\";\nvar pathId = 1;\n\nvar Brush =\n/*#__PURE__*/\nfunction (_BaseCanvas) {\n  _inherits(Brush, _BaseCanvas);\n\n  function Brush(_ref) {\n    var _this;\n\n    var _ref$width = _ref.width,\n        width = _ref$width === void 0 ? 800 : _ref$width,\n        _ref$height = _ref.height,\n        height = _ref$height === void 0 ? 800 : _ref$height,\n        el = _ref.el,\n        _ref$imageOptions = _ref.imageOptions,\n        imageOptions = _ref$imageOptions === void 0 ? {} : _ref$imageOptions,\n        _ref$layersOptions = _ref.layersOptions,\n        layersOptions = _ref$layersOptions === void 0 ? {} : _ref$layersOptions;\n\n    _classCallCheck(this, Brush);\n\n    var canvas = document.createElement('canvas');\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(Brush).call(this, canvas));\n    canvas.width = width;\n    canvas.height = height;\n    _this._canvas = canvas;\n    _this._context = canvas.getContext('2d');\n\n    _this._emit('initCanvasOptions', canvas, layersOptions);\n\n    _this._isDrawing = false; // 判断是否在绘图过程中\n\n    _this.drawTypeList = ['polygon', 'rect', 'line', 'arrow'];\n    _this.drawType = \"rect\";\n    _this.coordinates = [];\n    _this.coordinate = [];\n    _this.wrapOffsetX = 0;\n    _this.wrapOffsetY = 0;\n    _this.dragThreshold = 5; // 拖动大于10像素才认为想拖动图片\n\n    _this.layersMoveFlag = true;\n    _this.currentLoc = [0, 0];\n    var $el = el || document.body;\n    $el.appendChild(canvas); // 注册ImageLayer\n\n    _this.imageLayer = new ImageLayer(_objectSpread({}, imageOptions, {\n      canvas: _this._canvas\n    }));\n\n    _this.imageLayer.initLayer().then(function () {\n      _this.initEvents(_this._canvas);\n    }); // 注册多边形\n\n\n    _this.polygon = new PolygonLayer({\n      canvas: canvas\n    }); // 注册矩形\n\n    _this.rect = new RectLayer({\n      canvas: canvas\n    }); // xian \n\n    _this.line = new LineLayer({\n      canvas: canvas\n    }); // arrow\n\n    _this.arrow = new ArrowLayer({\n      canvas: canvas\n    });\n\n    _this.initOn();\n\n    return _this;\n  }\n  /**\n   *  监听重绘\n   */\n\n\n  _createClass(Brush, [{\n    key: \"initOn\",\n    value: function initOn() {\n      this._on('clearCanvas', this.clearCanvas, this);\n\n      this._on('addPolygonVertex', this.addPolygonVertex, this);\n\n      this._on('addLocToCoordinate', this.addLocToCoordinate, this);\n\n      this._on('changePolygon', this.changePolygon, this);\n\n      this._on('layersMove', this.layersMove, this);\n    }\n  }, {\n    key: \"clearCanvas\",\n    value: function clearCanvas() {\n      this._clearCanvas();\n\n      this.imageLayer && this.imageLayer.drawImage();\n    }\n    /**\n     * 多边形增加一个定点信息\n     * @param {*} param0 \n     */\n\n  }, {\n    key: \"addPolygonVertex\",\n    value: function addPolygonVertex(_ref2) {\n      var pathId = _ref2.pathId,\n          dot = _ref2.dot,\n          index = _ref2.index;\n\n      var _this$coordinates$fil = this.coordinates.filter(function (val) {\n        return val.pathId == pathId;\n      }),\n          _this$coordinates$fil2 = _slicedToArray(_this$coordinates$fil, 1),\n          checkedInfo = _this$coordinates$fil2[0];\n\n      if (checkedInfo) {\n        var _this$_formateDotBase = this._formateDotBase(dot),\n            _this$_formateDotBase2 = _slicedToArray(_this$_formateDotBase, 2),\n            x = _this$_formateDotBase2[0],\n            y = _this$_formateDotBase2[1];\n\n        checkedInfo.paths.splice(index, 0, [x, y]);\n      }\n    }\n    /**\n     * 将当前点信息存储到coordinate数组中\n     * @param {*} loc \n     */\n\n  }, {\n    key: \"addLocToCoordinate\",\n    value: function addLocToCoordinate(loc) {\n      this.coordinate.push(this._formateDotBase(loc));\n    }\n    /**\n     * 修改多边形 或者矩形定点信息\n     * @param {*} param0 \n     */\n\n  }, {\n    key: \"changePolygon\",\n    value: function changePolygon(_ref3) {\n      var index = _ref3.index,\n          loc = _ref3.loc,\n          pathId = _ref3.pathId;\n\n      var _this$coordinates$fil3 = this.coordinates.filter(function (val) {\n        return val.pathId == pathId;\n      }),\n          _this$coordinates$fil4 = _slicedToArray(_this$coordinates$fil3, 1),\n          checkedInfo = _this$coordinates$fil4[0];\n\n      if (checkedInfo && checkedInfo.paths) {\n        var paths = checkedInfo.paths || [];\n        paths[index] = this._formateDotBase(loc);\n      }\n    }\n    /**\n     * 判断是拖拽图片 还是移动图形\n     */\n\n  }, {\n    key: \"layersMove\",\n    value: function layersMove(flag, loc) {\n      this.layersMoveFlag = flag;\n\n      if (!flag) {\n        // 图片移动\n        var _this$_formateDotBase3 = this._formateDotBase(loc),\n            _this$_formateDotBase4 = _slicedToArray(_this$_formateDotBase3, 2),\n            _this$_formateDotBase5 = _this$_formateDotBase4[0],\n            x = _this$_formateDotBase5 === void 0 ? 0 : _this$_formateDotBase5,\n            _this$_formateDotBase6 = _this$_formateDotBase4[1],\n            y = _this$_formateDotBase6 === void 0 ? 0 : _this$_formateDotBase6;\n\n        this.coordinate = this.coordinate.filter(function (val) {\n          return !(val[0] == x && val[1] == y);\n        });\n      }\n    }\n    /**\n     * 更改当前图形绘制类型\n     */\n\n  }, {\n    key: \"changeDrawType\",\n    value: function changeDrawType(type) {\n      this.drawType = type;\n    }\n  }, {\n    key: \"drawLayerEnd\",\n    value: function drawLayerEnd() {\n      var _this2 = this;\n\n      this.clearCanvas();\n      this.coordinates.push({\n        pathId: pathId,\n        paths: this.coordinate,\n        type: this.drawType\n      });\n      this.coordinate = [];\n      this.layersMoveFlag = true;\n      pathId++;\n      this.getDiffDrawTypeInfo();\n      var coordinates = this.coordinates.filter(function (val) {\n        return val.type == _this2.drawType;\n      });\n\n      this._emit('drawEnd', this.drawType, coordinates, this.coordinate);\n    } // 渲染除当前绘制状态外的不同形状\n\n  }, {\n    key: \"getDiffDrawTypeInfo\",\n    value: function getDiffDrawTypeInfo() {\n      var _this3 = this;\n\n      var coordinates = this.coordinates || [];\n      var drawTypeList = this.drawTypeList.filter(function (val) {\n        return val != _this3.drawType;\n      });\n      var tempMap = {};\n      drawTypeList.forEach(function (type) {\n        tempMap[type] = coordinates.filter(function (val) {\n          return val.type == type;\n        });\n      });\n      Object.keys(tempMap).forEach(function (key) {\n        var layer = _this3[key] || {};\n\n        if (layer.imageDargEndCallback) {\n          layer.imageDargEndCallback(tempMap[key]);\n        }\n      });\n    } // add canvasDom events\n\n  }, {\n    key: \"initEvents\",\n    value: function initEvents($canvasDom) {\n      var _this4 = this;\n\n      $canvasDom.addEventListener('mousedown', function (e) {\n        _this4.clearCanvas();\n\n        _this4.getDiffDrawTypeInfo();\n\n        _this4.handleCanvasMousedown(e);\n      });\n      $canvasDom.addEventListener('mousemove', function (e) {\n        _this4.clearCanvas();\n\n        _this4.getDiffDrawTypeInfo();\n\n        _this4.handleCanvasMousemove(e);\n      });\n      $canvasDom.addEventListener('mouseup', function (e) {\n        // this.clearCanvas();\n        // this.getDiffDrawTypeInfo();\n        _this4.handleCanvasMouseup(e);\n      });\n      $canvasDom.addEventListener('mousewheel', function (e) {\n        _this4.clearCanvas();\n\n        _this4.getDiffDrawTypeInfo();\n\n        _this4.handleCanvasMousewheel(e);\n      });\n      $canvasDom.addEventListener('dblclick', function (e) {\n        _this4.handleCanvasDbClick(e);\n      });\n    }\n  }, {\n    key: \"handleCanvasMousedown\",\n    value: function handleCanvasMousedown(e) {\n      var _this5 = this;\n\n      e.stopPropagation();\n      e.preventDefault();\n      this.imageLayer.mouseDownStart(e);\n\n      var loc = this._windowToCanvas(event.clientX, event.clientY, this._canvas);\n\n      this.wrapOffsetX = loc[0];\n      this.wrapOffsetY = loc[1];\n      this.currentLoc = loc;\n      var coordinates = this.coordinates.filter(function (val) {\n        return val.type == _this5.drawType;\n      });\n      this[this.drawType] && this[this.drawType].mouseDown(coordinates, this.coordinate, loc);\n    }\n  }, {\n    key: \"handleCanvasMousemove\",\n    value: function handleCanvasMousemove(e) {\n      var _this6 = this;\n\n      e.stopPropagation();\n      e.preventDefault();\n\n      var loc = this._windowToCanvas(e.clientX, e.clientY, this._canvas);\n\n      this.currentLoc = loc;\n      var coordinates = this.coordinates.filter(function (val) {\n        return val.type == _this6.drawType;\n      });\n\n      if (e.buttons == 1) {\n        // 拖拽\n        if (!this.layersMoveFlag) {\n          this.imageLayer.mouseDownMove(e).then(function () {\n            _this6.layersMoveFlag = true;\n\n            _this6.getDiffDrawTypeInfo();\n\n            _this6[_this6.drawType] && _this6[_this6.drawType].imageDargEndCallback(coordinates, _this6.coordinate, loc);\n          });\n\n          this._canvas.addEventListener('mouseup', function (e) {\n            e.stopPropagation();\n            e.preventDefault();\n\n            var loc = _this6._windowToCanvas(e.clientX, e.clientY, _this6._canvas);\n\n            var diffX = loc[0] - _this6.wrapOffsetX;\n            var diffY = loc[1] - _this6.wrapOffsetY;\n\n            if (Math.abs(diffX) > _this6.dragThreshold || Math.abs(diffY) > _this6.dragThreshold) {\n              if (_this6.drawType == 'ploygon') {\n                _this6[_this6.drawType] && _this6[_this6.drawType].mouseDown(coordinates, _this6.coordinate, loc);\n              }\n            }\n          });\n        } else {\n          this[this.drawType] && this[this.drawType].mouseMoveDrag(coordinates, this.coordinate, loc);\n        }\n      } else {\n        // 非拖拽  可能在绘制图形\n        this[this.drawType] && this[this.drawType].mouseMove(coordinates, this.coordinate, loc);\n      }\n    }\n  }, {\n    key: \"handleCanvasMousewheel\",\n    value: function handleCanvasMousewheel(e) {\n      var _this7 = this;\n\n      e.stopPropagation();\n      e.preventDefault();\n\n      if (e.wheelDelta > 0) {\n        this.imageLayer.operateImageSize('amplification', e);\n      } else {\n        this.imageLayer.operateImageSize('reduce', e);\n      }\n\n      var coordinates = this.coordinates.filter(function (val) {\n        return val.type == _this7.drawType;\n      });\n      this[this.drawType] && this[this.drawType].imageDargEndCallback(coordinates, this.coordinate, this.currentLoc);\n    }\n  }, {\n    key: \"handleCanvasMouseup\",\n    value: function handleCanvasMouseup(e) {\n      e.stopPropagation();\n      e.preventDefault();\n\n      this._emit('eidtEnd');\n\n      if (this.drawType == 'rect' || this.drawType == 'line' || this.drawType == 'arrow') {\n        if (this.coordinate.length == 2) {\n          this.drawLayerEnd();\n        }\n      }\n\n      console.log(e.buttons, 'up');\n    }\n  }, {\n    key: \"handleCanvasDbClick\",\n    value: function handleCanvasDbClick(e) {\n      e.stopPropagation();\n      e.preventDefault();\n\n      if (this.drawType === 'polygon') {\n        if (this.coordinate.length > 2) {\n          this.drawLayerEnd();\n        } else {\n          throw '小于两个点不能存储';\n        }\n      }\n    }\n  }]);\n\n  return Brush;\n}(BaseCanvas);\n\nexport default Brush;",{"version":3,"sources":["/Users/kscit/Documents/study/my-vue-example/src/view/canvas/index.js"],"names":["BaseCanvas","ImageLayer","PolygonLayer","RectLayer","LineLayer","ArrowLayer","pathId","Brush","width","height","el","imageOptions","layersOptions","canvas","document","createElement","_canvas","_context","getContext","_emit","_isDrawing","drawTypeList","drawType","coordinates","coordinate","wrapOffsetX","wrapOffsetY","dragThreshold","layersMoveFlag","currentLoc","$el","body","appendChild","imageLayer","initLayer","then","initEvents","polygon","rect","line","arrow","initOn","_on","clearCanvas","addPolygonVertex","addLocToCoordinate","changePolygon","layersMove","_clearCanvas","drawImage","dot","index","filter","val","checkedInfo","_formateDotBase","x","y","paths","splice","loc","push","flag","type","getDiffDrawTypeInfo","tempMap","forEach","Object","keys","key","layer","imageDargEndCallback","$canvasDom","addEventListener","e","handleCanvasMousedown","handleCanvasMousemove","handleCanvasMouseup","handleCanvasMousewheel","handleCanvasDbClick","stopPropagation","preventDefault","mouseDownStart","_windowToCanvas","event","clientX","clientY","mouseDown","buttons","mouseDownMove","diffX","diffY","Math","abs","mouseMoveDrag","mouseMove","wheelDelta","operateImageSize","length","drawLayerEnd","console","log"],"mappings":"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","sourcesContent":["import BaseCanvas from './baseCanvas';\nimport ImageLayer from './imageLayer';\nimport PolygonLayer from './polygonLayer';\nimport RectLayer from './RectLayer';\nimport LineLayer from './lineLayer';\nimport ArrowLayer from './arrowLayer'\nlet pathId = 1;\n\nclass Brush extends BaseCanvas {\n    constructor({ width = 800, height = 800, el, imageOptions = {}, layersOptions = {} }) {\n\n        const canvas = document.createElement('canvas');\n        super(canvas);\n        canvas.width = width;\n        canvas.height = height;\n        this._canvas = canvas;\n        this._context = canvas.getContext('2d');\n        this._emit('initCanvasOptions', canvas, layersOptions);\n        this._isDrawing = false;  // 判断是否在绘图过程中\n        this.drawTypeList = ['polygon', 'rect', 'line', 'arrow'];\n        this.drawType = \"rect\";\n        this.coordinates = [];\n        this.coordinate = [];\n\n        this.wrapOffsetX = 0;\n        this.wrapOffsetY = 0;\n        this.dragThreshold = 5; // 拖动大于10像素才认为想拖动图片\n\n        this.layersMoveFlag = true;\n        this.currentLoc = [0, 0];\n\n        const $el = el || document.body;\n        $el.appendChild(canvas);\n        // 注册ImageLayer\n        this.imageLayer = new ImageLayer({\n            ...imageOptions,\n            canvas: this._canvas\n        });\n        this.imageLayer.initLayer().then(() => {\n            this.initEvents(this._canvas);\n        });\n        // 注册多边形\n        this.polygon = new PolygonLayer({\n            canvas\n        })\n        // 注册矩形\n        this.rect = new RectLayer({\n            canvas\n        });\n        // xian \n        this.line = new LineLayer({\n            canvas\n        });\n        // arrow\n        this.arrow = new ArrowLayer({\n            canvas\n        });\n        this.initOn();\n    }\n    /**\n     *  监听重绘\n     */\n    initOn() {\n        this._on('clearCanvas', this.clearCanvas, this);\n        this._on('addPolygonVertex', this.addPolygonVertex, this);\n        this._on('addLocToCoordinate', this.addLocToCoordinate, this);\n        this._on('changePolygon', this.changePolygon, this);\n        this._on('layersMove', this.layersMove, this)\n\n    }\n\n    clearCanvas() {\n\n        this._clearCanvas();\n        this.imageLayer && this.imageLayer.drawImage();\n    }\n    /**\n     * 多边形增加一个定点信息\n     * @param {*} param0 \n     */\n    addPolygonVertex({ pathId, dot, index }) {\n        const [checkedInfo] = this.coordinates.filter(val => val.pathId == pathId);\n        if (checkedInfo) {\n            const [x, y] = this._formateDotBase(dot);\n            checkedInfo.paths.splice(index, 0, [x, y]);\n        }\n    }\n    /**\n     * 将当前点信息存储到coordinate数组中\n     * @param {*} loc \n     */\n    addLocToCoordinate(loc) {\n        this.coordinate.push(this._formateDotBase(loc));\n    }\n\n    /**\n     * 修改多边形 或者矩形定点信息\n     * @param {*} param0 \n     */\n    changePolygon({ index, loc, pathId }) {\n        const [checkedInfo] = this.coordinates.filter(val => val.pathId == pathId);\n        if (checkedInfo && checkedInfo.paths) {\n            const paths = checkedInfo.paths || [];\n            paths[index] = this._formateDotBase(loc);\n        }\n    }\n    /**\n     * 判断是拖拽图片 还是移动图形\n     */\n    layersMove(flag, loc) {\n        this.layersMoveFlag = flag;\n\n        if (!flag) {\n            // 图片移动\n            const [x = 0, y = 0] = this._formateDotBase(loc);\n\n            this.coordinate = this.coordinate.filter(val => {\n                return !(val[0] == x && val[1] == y)\n            });\n        }\n    }\n    /**\n     * 更改当前图形绘制类型\n     */\n    changeDrawType(type) {\n        this.drawType = type;\n\n    }\n\n    drawLayerEnd() {\n        this.clearCanvas();\n        this.coordinates.push({\n            pathId,\n            paths: this.coordinate,\n            type: this.drawType\n        });\n        this.coordinate = [];\n        this.layersMoveFlag = true;\n        pathId++;\n        this.getDiffDrawTypeInfo();\n        const coordinates = this.coordinates.filter(val => val.type == this.drawType);\n        this._emit('drawEnd', this.drawType, coordinates, this.coordinate);\n    }\n    // 渲染除当前绘制状态外的不同形状\n\n    getDiffDrawTypeInfo() {\n        const coordinates = this.coordinates || [];\n        const drawTypeList = this.drawTypeList.filter(val => val != this.drawType);\n        const tempMap = {};\n        drawTypeList.forEach(type => {\n            tempMap[type] = coordinates.filter(val => val.type == type)\n        })\n        Object.keys(tempMap).forEach(key => {\n            const layer = this[key] || {};\n            if (layer.imageDargEndCallback) {\n                layer.imageDargEndCallback(tempMap[key]);\n            }\n        })\n    }\n\n\n    // add canvasDom events\n    initEvents($canvasDom) {\n\n        $canvasDom.addEventListener('mousedown', (e) => {\n\n            this.clearCanvas();\n            this.getDiffDrawTypeInfo();\n            this.handleCanvasMousedown(e);\n        });\n        $canvasDom.addEventListener('mousemove', (e) => {\n\n            this.clearCanvas();\n            this.getDiffDrawTypeInfo();\n            this.handleCanvasMousemove(e);\n        });\n        $canvasDom.addEventListener('mouseup', (e) => {\n\n            // this.clearCanvas();\n            // this.getDiffDrawTypeInfo();\n            this.handleCanvasMouseup(e);\n        });\n        $canvasDom.addEventListener('mousewheel', (e) => {\n\n            this.clearCanvas();\n            this.getDiffDrawTypeInfo();\n            this.handleCanvasMousewheel(e);\n        });\n        $canvasDom.addEventListener('dblclick', (e) => {\n            this.handleCanvasDbClick(e);\n        })\n\n\n    }\n\n    handleCanvasMousedown(e) {\n        e.stopPropagation();\n        e.preventDefault();\n        this.imageLayer.mouseDownStart(e);\n        const loc = this._windowToCanvas(event.clientX, event.clientY, this._canvas);\n        this.wrapOffsetX = loc[0];\n        this.wrapOffsetY = loc[1];\n        this.currentLoc = loc;\n        const coordinates = this.coordinates.filter(val => val.type == this.drawType);\n        this[this.drawType] && this[this.drawType].mouseDown(coordinates, this.coordinate, loc);\n\n    }\n\n    handleCanvasMousemove(e) {\n        e.stopPropagation();\n        e.preventDefault();\n        const loc = this._windowToCanvas(e.clientX, e.clientY, this._canvas);\n        this.currentLoc = loc;\n        const coordinates = this.coordinates.filter(val => val.type == this.drawType);\n\n        if (e.buttons == 1) {\n\n\n\n\n\n            // 拖拽\n            if (!this.layersMoveFlag) {\n                this.imageLayer.mouseDownMove(e).then(() => {\n                    this.layersMoveFlag = true;\n                    this.getDiffDrawTypeInfo();\n                    this[this.drawType] && this[this.drawType].imageDargEndCallback(coordinates, this.coordinate, loc);\n\n                });\n\n                this._canvas.addEventListener('mouseup', (e) => {\n                    e.stopPropagation();\n                    e.preventDefault();\n\n                    const loc = this._windowToCanvas(e.clientX, e.clientY, this._canvas);\n                    const diffX = loc[0] - this.wrapOffsetX;\n                    const diffY = loc[1] - this.wrapOffsetY;\n                    if ((Math.abs(diffX) > this.dragThreshold || Math.abs(diffY) > this.dragThreshold)) {\n                        if (this.drawType == 'ploygon') {\n                            this[this.drawType] && this[this.drawType].mouseDown(coordinates, this.coordinate, loc);\n                        }\n                    }\n\n                })\n\n            } else {\n                this[this.drawType] && this[this.drawType].mouseMoveDrag(coordinates, this.coordinate, loc);\n            }\n\n\n        } else {\n\n            // 非拖拽  可能在绘制图形\n            this[this.drawType] && this[this.drawType].mouseMove(coordinates, this.coordinate, loc);\n\n        }\n    }\n\n    handleCanvasMousewheel(e) {\n        e.stopPropagation();\n        e.preventDefault();\n        if (e.wheelDelta > 0) {\n            this.imageLayer.operateImageSize('amplification', e);\n        } else {\n            this.imageLayer.operateImageSize('reduce', e);\n        }\n        const coordinates = this.coordinates.filter(val => val.type == this.drawType);\n\n        this[this.drawType] && this[this.drawType].imageDargEndCallback(coordinates, this.coordinate, this.currentLoc);\n\n    }\n\n    handleCanvasMouseup(e) {\n        e.stopPropagation();\n        e.preventDefault();\n        this._emit('eidtEnd');\n        if (this.drawType == 'rect' || this.drawType == 'line' || this.drawType == 'arrow') {\n            if (this.coordinate.length == 2) {\n                this.drawLayerEnd();\n            }\n        }\n        console.log(e.buttons, 'up');\n\n    }\n\n\n\n    handleCanvasDbClick(e) {\n        e.stopPropagation();\n        e.preventDefault();\n        if (this.drawType === 'polygon') {\n\n            if (this.coordinate.length > 2) {\n                this.drawLayerEnd();\n            } else {\n                throw ('小于两个点不能存储')\n            }\n        }\n\n    }\n}\n\n\n\nexport default Brush;"]}]}