{"remainingRequest":"/Users/kscit/Documents/study/my-vue-example/node_modules/babel-loader/lib/index.js!/Users/kscit/Documents/study/my-vue-example/node_modules/eslint-loader/index.js??ref--13-0!/Users/kscit/Documents/study/my-vue-example/src/view/canvas/lineLayer.js","dependencies":[{"path":"/Users/kscit/Documents/study/my-vue-example/src/view/canvas/lineLayer.js","mtime":1586666116133},{"path":"/Users/kscit/Documents/study/my-vue-example/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/kscit/Documents/study/my-vue-example/node_modules/babel-loader/lib/index.js","mtime":499162500000},{"path":"/Users/kscit/Documents/study/my-vue-example/node_modules/eslint-loader/index.js","mtime":499162500000}],"contextDependencies":[],"result":["import _slicedToArray from \"/Users/kscit/Documents/study/my-vue-example/node_modules/@babel/runtime-corejs2/helpers/esm/slicedToArray\";\nimport \"core-js/modules/web.dom.iterable\";\nimport _classCallCheck from \"/Users/kscit/Documents/study/my-vue-example/node_modules/@babel/runtime-corejs2/helpers/esm/classCallCheck\";\nimport _possibleConstructorReturn from \"/Users/kscit/Documents/study/my-vue-example/node_modules/@babel/runtime-corejs2/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/Users/kscit/Documents/study/my-vue-example/node_modules/@babel/runtime-corejs2/helpers/esm/getPrototypeOf\";\nimport _assertThisInitialized from \"/Users/kscit/Documents/study/my-vue-example/node_modules/@babel/runtime-corejs2/helpers/esm/assertThisInitialized\";\nimport _inherits from \"/Users/kscit/Documents/study/my-vue-example/node_modules/@babel/runtime-corejs2/helpers/esm/inherits\";\nimport _defineProperty from \"/Users/kscit/Documents/study/my-vue-example/node_modules/@babel/runtime-corejs2/helpers/esm/defineProperty\";\nimport BaseCanvas from \"./baseCanvas\";\n\nvar LineLayers =\n/*#__PURE__*/\nfunction (_BaseCanvas) {\n  _inherits(LineLayers, _BaseCanvas);\n\n  function LineLayers(_ref) {\n    var _this;\n\n    var canvas = _ref.canvas,\n        layersOptions = _ref.layersOptions;\n\n    _classCallCheck(this, LineLayers);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(LineLayers).call(this, canvas));\n\n    _defineProperty(_assertThisInitialized(_this), \"_initOn\", function () {\n      _this._on('eidtEnd', _this.eidtEnd, _assertThisInitialized(_this));\n\n      _this._on('drawEnd', _this.drawEnd, _assertThisInitialized(_this));\n\n      _this._on('setCheckedInfo', _this.setCheckedInfo, _assertThisInitialized(_this));\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"eidtEnd\", function () {});\n\n    _defineProperty(_assertThisInitialized(_this), \"drawEnd\", function (type, coordinates, coordinate) {\n      if (type == _this._type) {\n        _this.imageDargEndCallback(coordinates, coordinate);\n      }\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"setCheckedInfo\", function (info) {\n      if (info) {\n        var type = info.type,\n            pathId = info.pathId;\n\n        if (type == _this._type) {\n          _this.checkedIndex = pathId;\n        } else {\n          _this.checkedIndex = -1;\n        }\n      } else {\n        _this.checkedIndex = -1;\n      }\n\n      _this.drawLine();\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"_drawLine\", function (loc1, loc2) {\n      var strokeFlag = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : true;\n\n      if (loc1 && loc2) {\n        // 绘制直线\n        _this._context.lineWidth = 5;\n\n        _this._context.beginPath();\n\n        _this._context.moveTo(loc1[0], loc1[1]);\n\n        _this._context.lineTo(loc2[0], loc2[1]);\n\n        if (strokeFlag) {\n          _this._context.strokeStyle = _this.strokeColor;\n\n          _this._context.stroke();\n        }\n      }\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"_drawCheckedLine\", function (loc1, loc2) {\n      if (loc1 && loc2) {\n        // 绘制直线\n        _this._context.lineWidth = 5;\n\n        _this._drawLine(loc1, loc2);\n\n        _this._context.save();\n\n        _this._context.lineWidth = 2;\n        _this._context.strokeColor = _this.fillColor;\n        _this._context.fillColor = _this.strokeColor;\n\n        _this._drawCircle(loc1, _this.strokeColor, _this.fillColor);\n\n        _this._drawCircle(loc2, _this.strokeColor, _this.fillColor);\n\n        _this._context.restore();\n      }\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"drawLine\", function (loc) {\n      var coordinates = _this.coordinates || [];\n      var coordinate = _this.coordinate || [];\n      coordinates && coordinates.forEach(function (val) {\n        var paths = val.paths || [];\n        var pathId = val.pathId;\n\n        var _ref2 = paths || [],\n            _ref3 = _slicedToArray(_ref2, 2),\n            loc1 = _ref3[0],\n            loc2 = _ref3[1];\n\n        if (_this.checkedIndex == pathId) {\n          _this._drawCheckedLine(loc1, loc2);\n        } else {\n          _this._drawLine(loc1, loc2);\n        }\n      });\n\n      if (coordinate) {\n        if (coordinate.length == 1 && loc) {\n          _this._drawLine(coordinate[0], loc);\n        } else if (coordinate.length == 2) {\n          _this._drawLine(coordinate[0], coordinate[1]);\n        }\n      }\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"mouseDown\", function (coordinates, coordinate, pos) {\n      _this.coordinates = _this.formateCoordinatesScale(coordinates);\n      _this.coordinate = _this.formateCoordinateScale(coordinate);\n\n      _this._emit('addLocToCoordinate', pos);\n\n      _this.drawLine(pos);\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"mouseMove\", function (coordinates, coordinate, pos) {\n      _this.coordinates = _this.formateCoordinatesScale(coordinates);\n      _this.coordinate = _this.formateCoordinateScale(coordinate);\n\n      _this.drawLine(pos);\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"mouseMoveDrag\", function (coordinates, coordinate, pos) {\n      _this.coordinates = _this.formateCoordinatesScale(coordinates);\n      _this.coordinate = _this.formateCoordinateScale(coordinate);\n\n      _this.drawLine(pos);\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"imageDargEndCallback\", function () {\n      var coordinates = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : [];\n      var coordinate = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : [];\n      _this.coordinates = _this.formateCoordinatesScale(coordinates);\n      _this.coordinate = _this.formateCoordinateScale(coordinate);\n\n      _this.drawLine();\n    });\n\n    if (canvas) {\n      _this.threshold = 10;\n      _this.editFlag = false;\n      _this.editPos = {};\n      _this.checkedIndex = -1;\n      _this.coordinate = [];\n      _this.coordinates = [];\n      _this._type = 'line';\n\n      _this._initOn();\n\n      _this.initCanvasOptions(canvas, layersOptions);\n    }\n\n    return _this;\n  }\n\n  return LineLayers;\n}(BaseCanvas);\n\nexport default LineLayers;",{"version":3,"sources":["/Users/kscit/Documents/study/my-vue-example/src/view/canvas/lineLayer.js"],"names":["BaseCanvas","LineLayers","canvas","layersOptions","_on","eidtEnd","drawEnd","setCheckedInfo","type","coordinates","coordinate","_type","imageDargEndCallback","info","pathId","checkedIndex","drawLine","loc1","loc2","strokeFlag","_context","lineWidth","beginPath","moveTo","lineTo","strokeStyle","strokeColor","stroke","_drawLine","save","fillColor","_drawCircle","restore","loc","forEach","val","paths","_drawCheckedLine","length","pos","formateCoordinatesScale","formateCoordinateScale","_emit","threshold","editFlag","editPos","_initOn","initCanvasOptions"],"mappings":"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","sourcesContent":["import BaseCanvas from './baseCanvas';\n\nclass LineLayers extends BaseCanvas {\n    constructor({ canvas, layersOptions }) {\n        super(canvas);\n        if (canvas) {\n            this.threshold = 10;\n            this.editFlag = false;\n            this.editPos = {};\n            this.checkedIndex = -1;\n            this.coordinate = [];\n            this.coordinates = [];\n            this._type = 'line';\n            this._initOn();\n            this.initCanvasOptions(canvas, layersOptions);\n        }\n    }\n\n    _initOn = () => {\n        this._on('eidtEnd', this.eidtEnd, this);\n        this._on('drawEnd', this.drawEnd, this);\n        this._on('setCheckedInfo', this.setCheckedInfo, this);\n    };\n\n    eidtEnd = () => { };\n    drawEnd = (type, coordinates, coordinate) => {\n        if (type == this._type) {\n            this.imageDargEndCallback(coordinates, coordinate);\n        }\n    };\n    setCheckedInfo = info => {\n        if (info) {\n            const { type, pathId } = info;\n            if (type == this._type) {\n                this.checkedIndex = pathId;\n            } else {\n                this.checkedIndex = -1;\n            }\n        } else {\n            this.checkedIndex = -1;\n        }\n        this.drawLine();\n    };\n\n    _drawLine = (loc1, loc2, strokeFlag = true) => {\n        if (loc1 && loc2) {\n            // 绘制直线\n            this._context.lineWidth = 5;\n            this._context.beginPath();\n            this._context.moveTo(loc1[0], loc1[1]);\n            this._context.lineTo(loc2[0], loc2[1]);\n            if (strokeFlag) {\n                this._context.strokeStyle = this.strokeColor;\n                this._context.stroke();\n            }\n        }\n    };\n\n    _drawCheckedLine = (loc1, loc2) => {\n        if (loc1 && loc2) {\n            // 绘制直线\n            this._context.lineWidth = 5;\n            this._drawLine(loc1, loc2);\n            this._context.save();\n            this._context.lineWidth = 2;\n            this._context.strokeColor = this.fillColor;\n            this._context.fillColor = this.strokeColor;\n            this._drawCircle(loc1, this.strokeColor, this.fillColor);\n            this._drawCircle(loc2, this.strokeColor, this.fillColor);\n            this._context.restore();\n        }\n    };\n\n    drawLine = loc => {\n        const coordinates = this.coordinates || [];\n        const coordinate = this.coordinate || [];\n        coordinates &&\n            coordinates.forEach(val => {\n                const paths = val.paths || [];\n                const pathId = val.pathId;\n                const [loc1, loc2] = paths || [];\n                if (this.checkedIndex == pathId) {\n                    this._drawCheckedLine(loc1, loc2);\n                } else {\n                    this._drawLine(loc1, loc2);\n                }\n            });\n\n        if (coordinate) {\n            if (coordinate.length == 1 && loc) {\n                this._drawLine(coordinate[0], loc);\n            } else if (coordinate.length == 2) {\n                this._drawLine(coordinate[0], coordinate[1]);\n            }\n        }\n    };\n\n    mouseDown = (coordinates, coordinate, pos) => {\n        this.coordinates = this.formateCoordinatesScale(coordinates);\n        this.coordinate = this.formateCoordinateScale(coordinate);\n        this._emit('addLocToCoordinate', pos);\n        this.drawLine(pos);\n    };\n    mouseMove = (coordinates, coordinate, pos) => {\n        this.coordinates = this.formateCoordinatesScale(coordinates);\n        this.coordinate = this.formateCoordinateScale(coordinate);\n        this.drawLine(pos);\n    };\n\n    mouseMoveDrag = (coordinates, coordinate, pos) => {\n        this.coordinates = this.formateCoordinatesScale(coordinates);\n        this.coordinate = this.formateCoordinateScale(coordinate);\n        this.drawLine(pos);\n    };\n\n    imageDargEndCallback = (coordinates = [], coordinate = []) => {\n        this.coordinates = this.formateCoordinatesScale(coordinates);\n        this.coordinate = this.formateCoordinateScale(coordinate);\n        this.drawLine();\n    };\n}\n\nexport default LineLayers;\n"]}]}